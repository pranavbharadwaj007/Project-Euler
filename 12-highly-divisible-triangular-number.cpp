// The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. 
// The first ten terms would be:
// 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
// Let us list the factors of the first seven triangle numbers:
//  1: 1
//  3: 1,3
//  6: 1,2,3,6
// 10: 1,2,5,10
// 15: 1,3,5,15
// 21: 1,3,7,21
// 28: 1,2,4,7,14,28
// We can see that 28 is the first triangle number to have over five divisors.
// What is the value of the first triangle number to have over five hundred divisors?

#include <iostream>
#include<vector>
#include<math.h>
using namespace std;
#define ll long long
const int M = 1e7 + 7;

int main() {
    int i=1;
    while (true)
    {
        int num=(i)*(i+1)/2;
         int cnt=0;
        for(int j=1;j<=sqrt(num);j++){
            if(num%j==0){
                cnt++;
                if(num/j!=j)cnt++;
            }
        }
        if(cnt>500)break;
        i++;
    }
    int nn=i*(i+1)/2;
    cout<<nn<<endl;
    
    return 0;
}
